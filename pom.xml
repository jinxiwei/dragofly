<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>pims</groupId>
    <artifactId>dragofly</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>dragofly Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <spring.version>4.3.14.RELEASE</spring.version>
        <jackson.version>2.7.2</jackson.version>
        <jsp-api.version>2.2</jsp-api.version>
        <mybatis.version>3.3.1</mybatis.version>
        <jstl.version>1.2</jstl.version>
        <standard.version>1.2.5</standard.version>
        <spring-data-jpi.version>1.9.4.RELEASE</spring-data-jpi.version>
        <hibernate-jpa.version>1.0.1.Final</hibernate-jpa.version>
        <hibernate-entitymanager.version>5.1.0.Final</hibernate-entitymanager.version>
        <servlet-api.version>2.5</servlet-api.version>
        <common-codec.version>1.10</common-codec.version>
        <common-fileupload.version>1.3.3</common-fileupload.version>
        <common-lang3.version>3.7</common-lang3.version>
        <common-logging.version>1.2</common-logging.version>
        <mysql-connector.version>5.1.38</mysql-connector.version>
        <json.version>20160212</json.version>
        <mybatis-spring.version>1.2.4</mybatis-spring.version>
        <druid.version>1.0.9</druid.version>
        <junit.version>3.8.1</junit.version>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
        <!-- spring核心 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- 这个jar 文件是所有应用都要用到的，它包含访问配置文件、创建和管理bean
        以及进行Inversion ofControl / Dependency Injection（IoC/DI）操作相关的所有类 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- spring表达式 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--为Spring 核心提供了大量扩展。可以找到使用Spring ApplicationContext特性时所需的全部类，
        JDNI 所需的全部类，instrumentation组件以及校验Validation 方面的相关类 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- 包含Web应用开发时，用到Spring框架时所需的核心类 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- 包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- 包含在应用中使用Spring 的AOP 特性时所需的类和源码级元数据支持 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- spring的持久层框架规范（无实现） -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring-data-jpi.version}</version>
        </dependency>

        <!-- java与json之间的转换 -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- jstl相关jar包 -->
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>jstl-api</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-impl</artifactId>
            <version>${standard.version}</version>
        </dependency>

        <!-- hibernate的JPA实现 -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>${hibernate-jpa.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-entitymanager.version}</version>
        </dependency>

        <!-- tomcat相关jar包 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api.version}</version>
        </dependency>

        <!-- 主要包括核心的算法。比如 MD5。SHA1。或者常规加密解密算法：BASE64 -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${common-codec.version}</version>
        </dependency>

        <!--jar工具包的依赖包是commons-io-2.2.jar,应用和Servlet中容易的加入强大和高性能的文件上传能力 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${common-fileupload.version}</version>
        </dependency>

        <!-- 与java.lang这个包的作用类似，Commons Lang这一组API也是提供一些基础的、通用的操作和处理，
        如自动生成toString()的结果、自动实现hashCode()和equals()方法、数组操作、枚举、日期和时间的处理等等 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${common-lang3.version}</version>
        </dependency>

        <!-- mysql驱动包-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector.version}</version>
        </dependency>

        <!-- mybatis相关jar包 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>

        <!-- 数据库连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!-- 日志相关jar包 -->


        <!-- 单元测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <finalName>dragofly</finalName>
    </build>
</project>
